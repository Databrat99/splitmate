MERGE INTO target AS t
USING (
    SELECT s1.id, s1.name, s2.address, s3.salary, s1.seen_date
    FROM source1 s1
    LEFT JOIN source2 s2 ON s1.id = s2.id
    LEFT JOIN source3 s3 ON s1.id = s3.id
) AS src
ON t.id = src.id  -- Matching condition

WHEN MATCHED THEN 
    UPDATE SET 
        t.name = src.name,
        t.address = src.address,
        t.salary = src.salary,
        t.first_seen_date = CASE 
            WHEN t.first_seen_date IS NULL THEN src.seen_date
            ELSE t.first_seen_date  -- Keep the original first seen date
        END,
        t.last_seen_date = src.seen_date  -- Always update to the latest seen date

WHEN NOT MATCHED THEN 
    INSERT (id, name, address, salary, first_seen_date, last_seen_date)
    VALUES (src.id, src.name, src.address, src.salary, src.seen_date, src.seen_date);




WITH CTE AS (
    SELECT *, 
           ROW_NUMBER() OVER (PARTITION BY id ORDER BY last_seen_date DESC) AS rn
    FROM table_name
)
DELETE FROM table_name 
WHERE id IN (SELECT id FROM CTE WHERE rn > 1);


select * from main m 
where exists (

select * from child c
where c.fk=m.pk)



-- Design Pattern for identifying duplicates (Multi-Column Test)
SELECT *
FROM <table to test, sysname,> as main
WHERE EXISTS (
	SELECT *	
	FROM <table to test, sysname,> sub
	WHERE sub.<column to test 1, sysname,> = main.<column to test 1, sysname,> 
		AND sub.<column to test 2, sysname,> = main.<column to test 2, sysname,>
		AND sub.<column to test 3, sysname,> = main.<column to test 3, sysname,> 
	HAVING COUNT(*) > 1
)
ORDER BY <column to test 1, sysname,>, <column to test 2, sysname,>, <column to test 3, sysname,>



--------------------------




With Dupes as (
Select First, Lastname, count(8) as No of rows
from employees
group by first, last
having count(*)>1
)
, partitined as (
select Rank() over (partion by e.first, e.last order by e.emp id) as rank
,e.*
from employee e join dupes d
on e.first=d.first
and e.last=d.last)
delte employee 
from employee e 
where exists (
select * from partitined p
wher e.employeeid=p.employee od and p.ranking>1)

selete * from employee

